<%
if content_for(:header_tags).present? && content_for(:header_tags).include?('/jstoolbar/')
  content_for :header_tags do %>
    <%= javascript_include_tag('tinymce/tinymce.min.js', plugin: 'redmine_wysiwyg_editor') %>
    <%
    formatting = Setting.text_formatting
    if formatting == 'textile' %>
      <%= javascript_include_tag('to-textile.min.js', plugin: 'redmine_wysiwyg_editor') %>
    <% elsif formatting == 'markdown' %>
      <%= javascript_include_tag('turndown.js', plugin: 'redmine_wysiwyg_editor') %>
      <%= javascript_include_tag('turndown-plugin-gfm.js', plugin: 'redmine_wysiwyg_editor') %>
    <% end %>
    <%= javascript_include_tag('redmine_wysiwyg_editor.js', plugin: 'redmine_wysiwyg_editor') %>
    <%= stylesheet_link_tag('redmine_wysiwyg_editor.css', plugin: 'redmine_wysiwyg_editor') %>
    <%
    attachments = @issue ? @issue.attachments.map {|a| a.filename } :
        @page ? @page.attachments.map {|a| a.filename } :
        @news ? @news.attachments.map {|a| a.filename } :
        @document ? @document.attachments.map {|a| a.filename } :
        @topic ? @topic.attachments.map {|a| a.filename } :
        []
    %>
    <% html_tag_allowed = textilizable('<div></div>').include?('<div></div>') %>
    <script>
function initRedmineWysiwygEditor() {
  var previewTab = $('.jstTabs .tab-preview');
  var previewButton = $('a[accesskey=r]');

  var previewUrl = (previewTab.length > 0) ? previewTab.data('url') :
      previewButton.attr('onclick').match(/submitPreview\("(.+?)",/)[1];

  if (!previewUrl) return;

  var allAttachments = function() {
    var attachments = <%= raw attachments.to_json %>;

    $('.attachments_fields input.filename').each(function() {
      attachments.push($(this).val());
    });

    // For Redmine 3.3
    $('#attachments_fields input.filename').each(function() {
      attachments.push($(this).val());
    });

    return attachments;
  };

  var uploader = function(file) {
    var input = $('input:file.filedrop').first();

    if (input.length > 0) {
      var sizeExceeded = uploadAndAttachFiles([file], input);

      return !sizeExceeded;
    } else {
      // For Redmine 3.3
      uploadAndAttachFiles([file], $('input:file.file_selector'));

      return true;
    }
  };

  var isAttachmentUploadable = function(jstEditor) {
    // Disables uploading in editing note and adding news comment.
    return (jstEditor.closest('.journal').length === 0) &&
      (jstEditor.closest('#add_comment_form').length === 0);
  }

  var postInit = function (rwe) {
    $(document).ajaxSuccess(function(event, xhr, settings) {
      var url = settings.url;

      if (/\/quoted(\?.+)?$/.test(url) ||
          /\/issue_templates\/load(\?.+)?$/.test(url)) {
        // Set comment content with quoted text or issue template.
        rwe.updateVisualContent();
      } else if (/\/uploads\.js\?.+$/.test(url)) {
        rwe.setAttachments(allAttachments());
        rwe.updateVisualContent();
      }
    });
  };

  var rwe = new RedmineWysiwygEditor($(this), previewUrl);

  rwe.setPostInitCallback(function() { postInit(rwe) });

  rwe.setFormat('<%= formatting %>');
  rwe.setLanguage('<%= current_language %>');
  rwe.setI18n({
    textile: 'Textile',
    markdown: 'Markdown',
    visual: '<%= l(:label_visual_editor) %>',
    preview: '<%= l(:label_preview) %>'
  });
  rwe.setAttachments(allAttachments());
  if (isAttachmentUploadable($(this))) rwe.setAttachmentUploader(uploader);

  rwe.setHtmlTagAllowed(<%= html_tag_allowed ? 'true' : 'false' %>)

  var setting = (typeof WYSIWYG_EDITOR_SETTING !== 'undefined') ?
      WYSIWYG_EDITOR_SETTING : {}

  rwe.init(setting);
}

$(function() {
  $('.jstEditor').each(initRedmineWysiwygEditor);

  $(document).ajaxSuccess(function(event, xhr, settings) {
    if (settings.url.match(/\/(edit\.js|new\.js|edit)$/)) {
      // New instance for editing comment and changing tracker or status
      $('.jstEditor').each(initRedmineWysiwygEditor);
    }
  });
});
    </script>
  <% end
end %>
